{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Probot Lib Dok\u00fcmantasyonu \ud83d\ude80","text":"<p>Probot Lib, Arduino tabanl\u0131 robot yar\u0131\u015fmalar\u0131nda kullan\u0131lmak \u00fczere geli\u015ftirilmi\u015f bir k\u00fct\u00fcphanedir.</p>"},{"location":"#klavuzlar-ve-ornekler","title":"\ud83d\udea6 K\u0131lavuzlar ve \u00d6rnekler","text":"<ul> <li>Blink \u00d6rne\u011fi</li> <li>API Referans\u0131</li> <li>Katk\u0131da Bulunma</li> <li>Lisans</li> </ul> <p>Daha fazla bilgi i\u00e7in GitHub Repository sayfam\u0131z\u0131 ziyaret edin.</p>"},{"location":"API/","title":"API Referans\u0131","text":"<p>Bu belge, Probot Lib k\u00fct\u00fcphanesindeki temel API i\u015flevlerini a\u00e7\u0131klar.</p>"},{"location":"API/#genel-yap","title":"\ud83d\ude80 Genel Yap\u0131","text":"<p>Probot Lib, robotun farkl\u0131 \u00e7al\u0131\u015fma modlar\u0131nda nas\u0131l hareket etti\u011fini kontrol etmek i\u00e7in \u00e7e\u015fitli fonksiyonlar sa\u011flar.</p>"},{"location":"API/#temel-fonksiyonlar","title":"\ud83d\udee0\ufe0f Temel Fonksiyonlar","text":""},{"location":"API/#void-robotinit","title":"<code>void robotInit()</code>","text":"<ul> <li>A\u00e7\u0131klama: Robot ba\u015flat\u0131ld\u0131\u011f\u0131nda bir kere \u00e7al\u0131\u015f\u0131r.</li> <li>Kullan\u0131m: Ba\u015flang\u0131\u00e7 ayarlar\u0131 i\u00e7in kullan\u0131l\u0131r.</li> </ul>"},{"location":"API/#void-robotend","title":"<code>void robotEnd()</code>","text":"<ul> <li>A\u00e7\u0131klama: Robot kapat\u0131ld\u0131\u011f\u0131nda bir kere \u00e7al\u0131\u015f\u0131r.</li> <li>Kullan\u0131m: Temizlik i\u015flemleri i\u00e7in kullan\u0131l\u0131r.</li> </ul>"},{"location":"API/#void-autoinit","title":"<code>void autoInit()</code>","text":"<ul> <li>A\u00e7\u0131klama: Otonom mod ba\u015flad\u0131\u011f\u0131nda bir kere \u00e7al\u0131\u015f\u0131r.</li> <li>Kullan\u0131m: Otonom ba\u015flatma ayarlar\u0131 i\u00e7in kullan\u0131l\u0131r.</li> </ul>"},{"location":"API/#void-autoloop","title":"<code>void autoLoop()</code>","text":"<ul> <li>A\u00e7\u0131klama: Otonom mod s\u0131ras\u0131nda s\u00fcrekli \u00e7al\u0131\u015f\u0131r.</li> <li>Kullan\u0131m: Otonom i\u015f ak\u0131\u015f\u0131n\u0131 y\u00f6netir.</li> </ul>"},{"location":"API/#void-teleopinit","title":"<code>void teleopInit()</code>","text":"<ul> <li>A\u00e7\u0131klama: Teleop modu ba\u015flad\u0131\u011f\u0131nda bir kere \u00e7al\u0131\u015f\u0131r.</li> <li>Kullan\u0131m: Teleop ba\u015flang\u0131\u00e7 ayarlar\u0131 i\u00e7in kullan\u0131l\u0131r.</li> </ul>"},{"location":"API/#void-teleoploop","title":"<code>void teleopLoop()</code>","text":"<ul> <li>A\u00e7\u0131klama: Teleop mod s\u0131ras\u0131nda s\u00fcrekli \u00e7al\u0131\u015f\u0131r.</li> <li>Kullan\u0131m: Joystick kontrol\u00fc ve kullan\u0131c\u0131 girdileri burada i\u015flenir.</li> </ul>"},{"location":"API/#ornek-kullanm","title":"\ud83d\udcd1 \u00d6rnek Kullan\u0131m","text":"<pre><code>#include &lt;probot.h&gt;\n\nvoid robotInit() {\n  Serial.begin(115200);\n  Serial.println(\"Robot Ba\u015flat\u0131ld\u0131\");\n}\n\nvoid autoInit() {\n  Serial.println(\"Otonom Ba\u015flad\u0131\");\n}\n\nvoid autoLoop() {\n  Serial.println(\"Otonom D\u00f6ng\u00fcs\u00fc\");\n}\n</code></pre>"},{"location":"API/#kaynaklar","title":"\ud83d\udd17 Kaynaklar","text":"<ul> <li>Probot Lib Repository</li> <li>Blink \u00d6rne\u011fi</li> </ul>"},{"location":"LICENSE/","title":"Lisans","text":""},{"location":"LICENSE/#mit-lisans-commons-clause","title":"\ud83d\udcd1 MIT Lisans\u0131 + Commons Clause","text":"<p>Probot Lib, MIT Lisans\u0131 ve Commons Clause k\u0131s\u0131tlamalar\u0131 alt\u0131nda lisanslanm\u0131\u015ft\u0131r.</p>"},{"location":"LICENSE/#mit-lisans","title":"\ud83d\udcdc MIT Lisans\u0131","text":"<pre><code>MIT License\n\nCopyright (c) 2025 Tuna G\u00fcl\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"LICENSE/#commons-clause","title":"\ud83d\udeab Commons Clause","text":"<p>The Software is provided to you by the Licensor under the License, as defined below, subject to the following condition.</p> <p>Without limiting other conditions in the License, the grant of rights under the License will not include, and the License does not grant to you, the right to Sell the Software.</p> <p>\u201cSell\u201d means to provide the Software to third parties for a fee or other consideration.</p>"},{"location":"LICENSE/#ticari-kullanm","title":"\ud83d\udce7 Ticari Kullan\u0131m","text":"<p>Ticari kullan\u0131m i\u00e7in tunagul54@gmail.com adresinden ileti\u015fime ge\u00e7in.</p>"},{"location":"contributing/","title":"Katk\u0131da Bulunma Rehberi","text":"<p>Te\u015fekk\u00fcr ederiz! Probot Lib k\u00fct\u00fcphanesine katk\u0131da bulunmak istiyorsan\u0131z, a\u015fa\u011f\u0131daki ad\u0131mlar\u0131 takip edin.</p>"},{"location":"contributing/#1-fork-ve-clone","title":"\ud83d\ude80 1. Fork ve Clone","text":"<ol> <li>Projeyi fork edin:</li> <li>GitHub sayfas\u0131na gidin ve <code>Fork</code> butonuna t\u0131klay\u0131n.</li> <li>Fork edilen projeyi klonlay\u0131n:    <code>bash    git clone https://github.com/tunapro1234/probot_lib.git    cd probot_lib</code></li> </ol>"},{"location":"contributing/#2-yeni-dal-branch-olusturma","title":"\ud83d\udee0\ufe0f 2. Yeni Dal (Branch) Olu\u015fturma","text":"<p>Yeni bir \u00f6zellik veya hata d\u00fczeltmesi i\u00e7in yeni bir dal olu\u015fturun:</p> <pre><code>git checkout -b feature/yeni-ozellik\n</code></pre>"},{"location":"contributing/#3-degisiklik-yapn","title":"\ud83d\udcd1 3. De\u011fi\u015fiklik Yap\u0131n","text":"<ul> <li>Kod standartlar\u0131na uygun de\u011fi\u015fiklik yap\u0131n.</li> <li>Dok\u00fcmantasyonu g\u00fcncelleyin.</li> <li>Testlerinizi \u00e7al\u0131\u015ft\u0131r\u0131n.</li> </ul>"},{"location":"contributing/#4-commit-ve-push","title":"\ud83d\udce4 4. Commit ve Push","text":"<pre><code>git add .\ngit commit -m \"Yeni \u00f6zellik: a\u00e7\u0131klama\"\ngit push origin feature/yeni-ozellik\n</code></pre>"},{"location":"contributing/#5-pull-request-olusturun","title":"\ud83d\udce5 5. Pull Request Olu\u015fturun","text":"<p>GitHub \u00fczerinden bir Pull Request olu\u015fturun.</p>"},{"location":"contributing/#iletisim","title":"\ud83d\udcde \u0130leti\u015fim","text":"<p>Herhangi bir sorunuz varsa, tunagul54@gmail.com adresinden ileti\u015fime ge\u00e7ebilirsiniz.</p>"},{"location":"contributing/#kaynaklar","title":"\ud83d\udd17 Kaynaklar","text":"<ul> <li>Katk\u0131da Bulunma Kurallar\u0131</li> <li>Kodlama Standartlar\u0131</li> </ul>"},{"location":"examples/RobotBlink/","title":"Blink \u00d6rne\u011fi","text":"<p>Blink \u00d6rne\u011fi, LED'in belirli aral\u0131klarla yan\u0131p s\u00f6nmesini sa\u011flar. Bu \u00f6rnek, robotun temel zamanlama mekanizmas\u0131n\u0131 ve otomatik i\u015flemleri anlamak i\u00e7in harika bir ba\u015flang\u0131\u00e7t\u0131r.</p>"},{"location":"examples/RobotBlink/#kullanlan-fonksiyonlar","title":"\ud83d\udea6 Kullan\u0131lan Fonksiyonlar","text":"<ul> <li><code>robotInit()</code>: Robot ilk ba\u015flat\u0131ld\u0131\u011f\u0131nda \u00e7al\u0131\u015f\u0131r.</li> <li><code>autoInit()</code>: Otonom mod ba\u015flad\u0131\u011f\u0131nda bir kez \u00e7al\u0131\u015f\u0131r.</li> <li><code>autoLoop()</code>: Otonom mod boyunca s\u00fcrekli \u00e7al\u0131\u015f\u0131r.</li> </ul>"},{"location":"examples/RobotBlink/#gerekli-donanm","title":"\ud83d\udee0\ufe0f Gerekli Donan\u0131m","text":"<ul> <li>Arduino uyumlu bir kart (UNO, MEGA vb.)</li> <li>LED (Dahili LED kullan\u0131labilir)</li> </ul>"},{"location":"examples/RobotBlink/#kod-ornegi","title":"\ud83d\udcd1 Kod \u00d6rne\u011fi","text":"<pre><code>#include &lt;probot.h&gt;\n\n// Gamepad, driver station \u00fczerinden gelen verileri i\u015fleyecek\nTunaGamepad gamepad(robot);\n\n// blink i\u00e7in gerekli yap\u0131lar\nunsigned long last_blink = 0;\nunsigned long blink_len = 500;\n\nvoid basicBlink() {\n  // ne kadar s\u00fcre ge\u00e7ti\u011fini kontrol et\n  unsigned long elapsed = (robot.getAutoElapsed() - last_blink);\n\n  // e\u011fer \u00e7ok s\u00fcre ge\u00e7tiyse\n  if (elapsed &gt; blink_len) {\n    // led yan\u0131yorsa s\u00f6nd\u00fcr, s\u00f6n\u00fckse yak\n    digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));\n\n    // bu i\u015flemi yapt\u0131\u011f\u0131m\u0131z zaman\u0131 kaydet ki, ne kadar s\u00fcre ge\u00e7ti\u011fine bakabilelim\n    last_blink = robot.getAutoElapsed();\n  }\n}\n\n\nvoid robotInit() {\n    // Robot ba\u015flat\u0131ld\u0131\u011f\u0131nda sadece bir kez \u00e7al\u0131\u015facak olan k\u0131s\u0131m\n\n    Serial.begin(115200);\n    Serial.println(\"Robot Enabled.\");\n}\n\nvoid robotEnd() {\n    // Robot kapat\u0131ld\u0131\u011f\u0131nda yap\u0131lacak i\u015flemler, sadece bir kez \u00e7al\u0131\u015facak\n\n    Serial.println(\"Robot Disabled.\");\n}\n\nvoid autoInit() {\n    // Otonom modu ba\u015flad\u0131\u011f\u0131nda bir sefer \u00e7al\u0131\u015facak olan k\u0131s\u0131m\n    Serial.println(\"Autonomous Mode Started.\"); \n}\n\nvoid autoLoop() {\n    // Otonom modu ba\u015flad\u0131\u011f\u0131nda d\u00f6ng\u00fc halinde \u00e7al\u0131\u015facak k\u0131s\u0131m\n    basicBlink();\n}\n\nvoid teleopInit() {\n    // Teleop modu ba\u015flad\u0131\u011f\u0131nda bir sefer \u00e7al\u0131\u015facak olan k\u0131s\u0131m\n    Serial.println(\"Teleop Mode Started.\"); \n    // Teleop ba\u015f\u0131nda led kapal\u0131 olsun\n    digitalWrite(LED_BUILTIN, HIGH); \n}\n\nvoid teleopLoop() {\n    // Teleop modu ba\u015flad\u0131\u011f\u0131nda d\u00f6ng\u00fc halinde \u00e7al\u0131\u015facak k\u0131s\u0131m\n    // Joystick verilerini al\n    if (gamepad.getButton(Button::A)) {\n        digitalWrite(LED_BUILTIN, LOW); \n    } else {\n        digitalWrite(LED_BUILTIN, HIGH);\n    }\n}\n</code></pre>"}]}